use parentAID;
SET GLOBAL event_scheduler = ON;
show tables;
show events;
show triggers;
SHOW PROCESSLIST;

-- ID SEQ
CREATE TABLE PARTICIPANTS_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE EVENT_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE PLEDGE_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE TICKET_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE PAYMENT_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE DONATION_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE APPEAL_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE NOTE_SEQ (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d');


DROP EVENT IF EXISTS e_daily;
/*
DROP TRIGGER IF EXISTS PARTICIPANTS_SEQ_TRUN;
DROP TRIGGER IF EXISTS PARTICIPANT_ID_TRI;
*/


select * from PARTICIPANTS_SEQ;
select * from EVENT_SEQ;
select * from PLEDGE_SEQ;
select * from TICKET_SEQ;
select * from PAYMENT_SEQ;
select * from DONATION_SEQ;
select * from APPEAL_SEQ;
select * from NOTE_SEQ;

-- ID TRIGGER

DELIMITER $$
CREATE TRIGGER PARTICIPANT_ID_TRI
BEFORE INSERT ON PARTICIPANTS
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO PARTICIPANTS_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.Participant_DBID = CONCAT('PA', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

CREATE TRIGGER EVENT_ID_TRI
BEFORE INSERT ON EVENT
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO EVENT_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.EVENT_DBID = CONCAT('EV', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

CREATE TRIGGER PLEDGE_ID_TRI
BEFORE INSERT ON PLEDGE
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO PLEDGE_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.PLEDGE_DBID = CONCAT('PL', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

CREATE TRIGGER TICKET_ID_TRI
BEFORE INSERT ON TICKETS
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO TICKET_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.TICKET_DBID = CONCAT('TIC', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

CREATE TRIGGER PAYMENT_ID_TRI
BEFORE INSERT ON MODE_PAYMENT
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO PAYMENT_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.Tranction_ID = CONCAT('PMT', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

CREATE TRIGGER DONATION_ID_TRI
BEFORE INSERT ON DONATIONS
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO DONATION_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.donation_dbid = CONCAT('DO', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

CREATE TRIGGER APPEAL_ID_TRI
BEFORE INSERT ON APPEALS
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO APPEAL_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.Appeals_DBID = CONCAT('APL', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

CREATE TRIGGER NOTE_ID_TRI
BEFORE INSERT ON NOTES
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO NOTE_SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW.Note_DBID = CONCAT('NO', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

/*
CREATE TRIGGER ..._ID_TRI
BEFORE INSERT ON ...
FOR EACH ROW
BEGIN
	declare SEQ INT;
	INSERT INTO ..._SEQ VALUES(NULL);
    SET SEQ = LAST_INSERT_ID();
    SET NEW...... = CONCAT('..', (SELECT DATE_FORMAT(SYSDATE(), '%Y%m%d')) , LPAD(SEQ, 4, '0'));
END$$

*/
ALTER EVENT e_daily
    ON SCHEDULE
        EVERY 5 MINUTE-- '2017-12-12-22:03:00' -- Time to start
    COMMENT 'Clean Sequence Table'
    DO 
	  BEGIN
		TRUNCATE PARTICIPANTS_SEQ;
        TRUNCATE EVENT_SEQ;
        TRUNCATE PLEDGE_SEQ;
        TRUNCATE TICKET_SEQ;
        TRUNCATE PAYMENT_SEQ;
        TRUNCATE DONATION_SEQ;
        TRUNCATE APPEAL_SEQ;
	  END;
      
